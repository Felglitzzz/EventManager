{"version":3,"sources":["../../server/models/index.js"],"names":["fs","require","path","Sequelize","basename","__filename","env","process","NODE_ENV","config","db","use_env_variable","sequelize","database","username","password","readdirSync","__dirname","filter","file","indexOf","slice","forEach","model","import","join","name","Object","keys","modelName","associate"],"mappings":";;;;;AAAA;AACA,IAAIA,KAAKC,QAAQ,IAAR,CAAT;AACA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;AACA,IAAIE,YAAYF,QAAQ,WAAR,CAAhB;;AAEA,IAAIG,WAAWF,KAAKE,QAAL,CAAcC,UAAd,CAAf;AACA,IAAIC,MAAMC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aAAlC;AACA,IAAIC,SAASR,QAAQ,qBAAR,EAA+BK,GAA/B,CAAb;AACA,IAAII,KAAK,EAAT;;AAEA,IAAID,OAAOE,gBAAX,EAA6B;AAC3B,MAAIC,YAAY,IAAIT,SAAJ,CAAcI,QAAQD,GAAR,CAAYG,OAAOE,gBAAnB,CAAd,EAAoDF,MAApD,CAAhB;AACD,CAFD,MAEO;AACL,MAAIG,YAAY,IAAIT,SAAJ,CAAcM,OAAOI,QAArB,EAA+BJ,OAAOK,QAAtC,EAAgDL,OAAOM,QAAvD,EAAiEN,MAAjE,CAAhB;AACD;;AAEDT,GACGgB,WADH,CACeC,SADf,EAEGC,MAFH,CAEU,UAACC,IAAD;AAAA,SAAWA,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,SAASf,QAAvC,IAAqDe,KAAKE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAAlF;AAAA,CAFV,EAGGC,OAHH,CAGW,UAACH,IAAD,EAAU;AACjB,MAAII,QAAQX,UAAUY,MAAV,CAAiBtB,KAAKuB,IAAL,CAAUR,SAAV,EAAqBE,IAArB,CAAjB,CAAZ;AACAT,KAAGa,MAAMG,IAAT,IAAiBH,KAAjB;AACD,CANH;;AAQAI,OAAOC,IAAP,CAAYlB,EAAZ,EAAgBY,OAAhB,CAAwB,UAACO,SAAD,EAAe;AACrC,MAAInB,GAAGmB,SAAH,EAAcC,SAAlB,EAA6B;AAC3BpB,OAAGmB,SAAH,EAAcC,SAAd,CAAwBpB,EAAxB;AACD;AACF,CAJD;;AAMAA,GAAGE,SAAH,GAAeA,SAAf;AACAF,GAAGP,SAAH,GAAeA,SAAf;;kBAEeO,E","file":"index.js","sourcesContent":["/*eslint-disable*/\nlet fs = require('fs');\nlet path = require('path');\nlet Sequelize = require('sequelize');\n\nlet basename = path.basename(__filename);\nlet env = process.env.NODE_ENV || 'development';\nlet config = require('../config/config.js')[env];\nlet db = {};\n\nif (config.use_env_variable) {\n  var sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  var sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nfs\n  .readdirSync(__dirname)\n  .filter((file) => (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js'))\n  .forEach((file) => {\n    let model = sequelize.import(path.join(__dirname, file));\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach((modelName) => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nexport default db;"]}