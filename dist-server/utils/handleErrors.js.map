{"version":3,"sources":["../../server/utils/handleErrors.js"],"names":["errorMessages","error","name","message","errors","type"],"mappings":";;;;;AAAA;;;;AAIA,IAAMA,gBAAgB,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,MAAIA,MAAMC,IAAN,KAAe,gCAAnB,EAAqD;AACnD,WAAO;AACLC,eAASF,MAAMG,MAAN,CAAa,CAAb,EAAgBD,OADpB;AAELF,aAAOA,MAAMG,MAAN,CAAa,CAAb,EAAgBD,OAFlB;AAGLE,YAAM;AAHD,KAAP;AAKD,GAND,MAMO,IAAIJ,MAAMC,IAAN,KAAe,0BAAf,IAA6CD,MAAMG,MAAN,CAAa,CAAb,EAAgBC,IAAhB,KAAyB,mBAA1E,EAA+F;AACpG,WAAO;AACLJ,aAAO,sCADF;AAELI,YAAM;AAFD,KAAP;AAID,GALM,MAKA,IAAIJ,MAAMC,IAAN,KAAe,0BAAnB,EAA+C;AACpD,WAAO;AACLC,eAASF,MAAMG,MAAN,CAAa,CAAb,EAAgBD,OADpB;AAELF,aAAOA,MAAMG,MAAN,CAAa,CAAb,EAAgBD,OAFlB;AAGLE,YAAM;AAHD,KAAP;AAKD;AACD,SAAOJ,MAAMC,IAAb;AACD,CApBD;;kBAsBeF,a","file":"handleErrors.js","sourcesContent":["/**\n * @param { object } error sequelize generated errors\n * @return { object } messages to display\n */\nconst errorMessages = (error) => {\n  if (error.name === 'SequelizeUniqueConstraintError') {\n    return {\n      message: error.errors[0].message,\n      error: error.errors[0].message,\n      type: 'uniqueError'\n    };\n  } else if (error.name === 'SequelizeValidationError' && error.errors[0].type === 'notNull Violation') {\n    return {\n      error: 'Please fill in the required field(s)',\n      type: 'validationError'\n    };\n  } else if (error.name === 'SequelizeValidationError') {\n    return {\n      message: error.errors[0].message,\n      error: error.errors[0].message,\n      type: 'validationError'\n    };\n  }\n  return error.name;\n};\n\nexport default errorMessages;\n"]}