{"version":3,"sources":["../../server/middleware/inputValidate.js"],"names":["Validate","req","res","next","errors","body","surname","firstname","username","email","password","passwordConfirm","length","test","isEmail","status","json","name","image","date","time","description","centerId","capacity","price","location","facilities","type"],"mappings":"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","file":"inputValidate.js","sourcesContent":["import Validator from 'validator';\nimport isEmpty from 'lodash/isEmpty';\n\n/**\n * This class validates signup and login inputs from users\n */\nexport default class Validate {\n  /**\n   * This middleware validates the signup\n   *\n   * @static\n   *\n   * @param {object} req request object\n   * @param {object} res response object\n   * @param {object} next passes action to following controller\n   *\n   * @returns {object} validation error messages object or contents of request.body object\n   * @memberof Validate\n   */\n  static signUp(req, res, next) {\n    const errors = {};\n    const {\n      surname, firstname, username, email, password, passwordConfirm\n    } = req.body;\n\n    if (!surname || surname === '') {\n      errors.surname = 'Surname is Required';\n    }\n    if (surname) {\n      if (surname.length < 3) {\n        errors.surname = 'Surname should be more than two characters';\n      }\n    }\n    if (/(\\d+)/.test(surname) || /[^a-zA-Z0-9]+/.test(surname)) {\n      errors.surname = 'Surname can only contain letters';\n    }\n    if (!firstname || firstname === '') {\n      errors.firstname = 'Firstname is Required';\n    }\n    if (firstname) {\n      if (firstname.length < 3) {\n        errors.firstname = 'Firstname should be more than two characters';\n      }\n    }\n    if (/(\\d+)/.test(firstname) || /[^a-zA-Z0-9]+/.test(firstname)) {\n      errors.firstname = 'Firstname can only contain letters';\n    }\n    if (!username || username === '') {\n      errors.username = 'Username is Required';\n    }\n    if (username) {\n      if (username.length < 3) {\n        errors.username = 'Username should be more than two characters';\n      }\n    }\n    if (!email || email === '') {\n      errors.email = 'Email is Required';\n    }\n    if (email) {\n      if (!Validator.isEmail(email)) {\n        errors.email = 'Invalid email, Enter a valid email, like so: you@mail.com';\n      }\n    }\n    if (!password || password === '') {\n      errors.password = 'Password is Required';\n    }\n    if (password) {\n      if (password.length < 8) {\n        errors.password = 'Password should not be less than 8 characers';\n      }\n    }\n    if (password) {\n      if (password !== passwordConfirm) {\n        errors.password = 'Passwords must match';\n      }\n    }\n    if (!isEmpty(errors)) {\n      return res.status(400).json({ errors });\n    }\n    return next();\n  }\n  /**\n   * This middleware validates user login inputs\n   *\n   * @static\n   * @param {object} req\n   * @param {object} res\n   * @param {object} next\n   *\n   * @returns {object} validation error messages object or contents of request.body object\n   * @memberof Validate\n   */\n  static login(req, res, next) {\n    const errors = {};\n    const { username, password } = req.body;\n    if (!username || username === '') {\n      errors.username = 'Username is Required';\n    }\n    if (!password || password === '') {\n      errors.password = 'Password is Required';\n    }\n    if (!isEmpty(errors)) {\n      return res.status(400).json({ errors });\n    }\n    return next();\n  }\n  /**\n   * This middleware validates inputs for create events\n   *\n   * @static\n   *\n   * @param {object} req\n   * @param {object} res\n   * @param {object} next\n   *\n   * @returns {object} validation error messages object or contents of request.body object\n   * @memberof Validate\n   */\n  static createEvent(req, res, next) {\n    const errors = {};\n\n    const {\n      name, image, date, time, description, centerId\n    } = req.body;\n\n    if (!name || name === '') {\n      errors.name = 'Name is Required';\n    }\n    if (name) {\n      if (name.length < 3) {\n        errors.name = 'Event name should be more than two characters';\n      }\n    }\n    if (!image || image === '') {\n      errors.image = 'Image is Required';\n    }\n    if (!date || date === '') {\n      errors.date = 'Date is Required';\n    }\n    if (!centerId || centerId === '') {\n      errors.centerId = 'Location is Required';\n    }\n    if (!time || time === '') {\n      errors.time = 'Time is Required';\n    }\n    if (!description || description === '') {\n      errors.description = 'Description is Required';\n    }\n    if (!isEmpty(errors)) {\n      return res.status(400).json({ errors });\n    }\n    return next();\n  }\n\n  /**\n   * This middleware validates inputs for edit event form\n   * @static\n   *\n   * @param {object} req\n   * @param {object} res\n   * @param {object} next\n   *\n   * @returns {object} validation error messages object or contents of request body object\n   * @memberof Validate\n   */\n  static editEvent(req, res, next) {\n    const errors = {};\n    const {\n      name, date, time, description, centerId, image\n    } = req.body;\n    if (!name || name === '') {\n      errors.name = 'Name is Required';\n    }\n    if (name) {\n      if (name.length < 3) {\n        errors.name = 'Event name should be more than two characters';\n      }\n    }\n    if (!centerId || centerId === '') {\n      errors.centerId = 'Center is Required';\n    }\n    if (!image || image === '') {\n      errors.image = 'Image is Required';\n    }\n    if (!date || date === '') {\n      errors.date = 'Date is Required';\n    }\n    if (!time || time === '') {\n      errors.time = 'Time is Required';\n    }\n    if (!description || description === '') {\n      errors.description = 'Description is Required';\n    }\n    if (!isEmpty(errors)) {\n      return res.status(400).json({ errors });\n    }\n    return next();\n  }\n\n  /**\n   * This middleware validates inputs for create events\n   *\n   * @static\n   *\n   * @param {object} req\n   * @param {object} res\n   * @param {object} next\n   *\n   * @returns {object} validation error messages object or contents of request.body object\n   * @memberof Validate\n   */\n  static createCenter(req, res, next) {\n    const errors = {};\n    const {\n      name, capacity, price, description, location, facilities, type, image\n    } = req.body;\n    if (!name || name === '') {\n      errors.name = 'Name is Required';\n    }\n    if (name) {\n      if (name.length < 3) {\n        errors.name = 'Center name should be more than two characters';\n      }\n    }\n    if (!location || location === '') {\n      errors.location = 'Location is Required';\n    }\n    if (location) {\n      if (location.length < 3) {\n        errors.location = 'Center name should be more than two characters';\n      }\n    }\n    if (!capacity || capacity === '') {\n      errors.capacity = 'Capacity is Required';\n    }\n    if (/^[a-zA-Z]+$/.test(capacity) || /[^a-zA-Z0-9]+/.test(capacity)) {\n      errors.capacity = 'Capacity can only contain numbers';\n    }\n    if (!image || image === '') {\n      errors.image = 'Image is Required';\n    }\n    if (!price || price === '') {\n      errors.price = 'Price is Required';\n    }\n    if (/^[a-zA-Z]+$/.test(price) || /[^a-zA-Z0-9]+/.test(price)) {\n      errors.price = 'Price can only contain numbers';\n    }\n    if (!type || type === '') {\n      errors.type = 'Type is Required';\n    }\n    if (!facilities || facilities === '') {\n      errors.facilities = 'Facilities is Required';\n    }\n    if (!description || description === '') {\n      errors.description = 'Description is Required';\n    }\n    if (!isEmpty(errors)) {\n      return res.status(400).json({ errors });\n    }\n    return next();\n  }\n\n  /**\n   * This middleware validates inputs for create events\n   *\n   * @static\n   *\n   * @param {object} req\n   * @param {object} res\n   * @param {object} next\n   *\n   * @returns {object} validation error messages object or contents of request.body object\n   * @memberof Validate\n   */\n  static editCenter(req, res, next) {\n    const errors = {};\n    const {\n      name, capacity, price, description, location, facilities, type, image\n    } = req.body;\n    if (!name || name === '') {\n      errors.name = 'Name is Required';\n    }\n    if (name) {\n      if (name.length < 3) {\n        errors.name = 'Name ame should be more than two characters';\n      }\n    }\n    if (!location || location === '') {\n      errors.location = 'Location is Required';\n    }\n    if (location) {\n      if (location.length < 3) {\n        errors.location = 'Location should be more than two characters';\n      }\n    }\n    if (!capacity || capacity === '') {\n      errors.capacity = 'Capacity is Required';\n    }\n    if (/^[a-zA-Z]+$/.test(capacity) || /[^a-zA-Z0-9]+/.test(capacity)) {\n      errors.capacity = 'Capacity can only contain numbers';\n    }\n    if (!image || image === '') {\n      errors.image = 'Image is Required';\n    }\n    if (!price || price === '') {\n      errors.price = 'Price is Required';\n    }\n    if (/^[a-zA-Z]+$/.test(price) || /[^a-zA-Z0-9]+/.test(price)) {\n      errors.price = 'Price can only contain numbers';\n    }\n    if (!type || type === '') {\n      errors.type = 'Type is Required';\n    }\n    if (!facilities || facilities === '') {\n      errors.facilities = 'Facilities is Required';\n    }\n    if (!description || description === '') {\n      errors.description = 'Description is Required';\n    }\n    if (!isEmpty(errors)) {\n      return res.status(400).json({ errors });\n    }\n    return next();\n  }\n}\n"]}